---
title: "Script para teste de biblioteca"
author: "Larissa e Bruno"
format: html
editor: visual
---

## Read me

Documentação dos testes realizados com a biblioteca rqc

## Running Code

Carregando biblioteca:

```{r}
library("Rqc")
```

Código apresentado em aula para gerar sequências aleatórias de Fastq

```{r}
generate_random_fastq <- function(num_sequences = 10, seq_length = 20, file_name = "random_output.fastq") {
  
  # Gerar sequências aleatórias de RNA
  generate_rna_sequence <- function(length) {
    nucleotides <- c("A", "U", "G", "C")
    return(paste0(sample(nucleotides, length, replace = TRUE), collapse = ""))
  }
  
  # Gerar sequências aleatórias de qualidades no formato Phred (ASCII 33-73)
  generate_phred_quality <- function(length) {
    quality_scores <- sample(33:73, length, replace = TRUE)
    return(intToUtf8(quality_scores))  # Converter para caracteres ASCII
  }
  
  # Abrir o arquivo para escrita
  file_conn <- file(file_name, "w")
  
  # Gerar e escrever cada sequência e qualidade no arquivo FASTQ
  for (i in 1:num_sequences) {
    # Identificador da sequência
    identifier <- paste0("@seq", i)
    
    # Gerar uma sequência de RNA aleatória
    sequence <- generate_rna_sequence(seq_length)
    
    # Gerar uma sequência de qualidade aleatória
    quality <- generate_phred_quality(seq_length)
    
    # Escrever no arquivo FASTQ
    writeLines(c(identifier, sequence, "+", quality), file_conn)
  }
  
  # Fechar o arquivo
  close(file_conn)
  
  cat("Arquivo FASTQ aleatório gerado com sucesso:", file_name, "\n")
}

```

Código modificado para gerar DNA sequences

```{r}
generate_random_fastq <- function(num_sequences = 10, seq_length = 20, file_name = "random_output.fastq") {
  
  # Gerar sequências aleatórias de RNA
  generate_rna_sequence <- function(length) {
    nucleotides <- c("A", "T", "G", "C")
    return(paste0(sample(nucleotides, length, replace = TRUE), collapse = ""))
  }
  
  # Gerar sequências aleatórias de qualidades no formato Phred (ASCII 33-73)
  generate_phred_quality <- function(length) {
    quality_scores <- sample(33:73, length, replace = TRUE)
    return(intToUtf8(quality_scores))  # Converter para caracteres ASCII
  }
  
  # Abrir o arquivo para escrita
  file_conn <- file(file_name, "w")
  
  # Gerar e escrever cada sequência e qualidade no arquivo FASTQ
  for (i in 1:num_sequences) {
    # Identificador da sequência
    identifier <- paste0("@seq", i)
    
    # Gerar uma sequência de RNA aleatória
    sequence <- generate_rna_sequence(seq_length)
    
    # Gerar uma sequência de qualidade aleatória
    quality <- generate_phred_quality(seq_length)
    
    # Escrever no arquivo FASTQ
    writeLines(c(identifier, sequence, "+", quality), file_conn)
  }
  
  # Fechar o arquivo
  close(file_conn)
  
  cat("Arquivo FASTQ aleatório gerado com sucesso:", file_name, "\n")
}
```

Agora aplicando para criar 50 fastq's aleatórios:

```{r}
#Exemplo de uso:
#Gerar um arquivos FASTQ com 10 sequências aleatórias, cada uma com 20 nucleotídeos
#generate_random_fastq(num_sequences = 10, seq_length = 20, file_name = "random_rna_seq.fastq")

#Gerar 50 arquivos FASTQ com nomes diferentes com 10 sequências aleatórias, cada uma com 20 nucleotídeos
output_folder <- "arquivos_gerados"
 
# Crie a pasta se ela não existir
if (!dir.exists(output_folder)) {
   dir.create(output_folder)
}

for (i in 1:50) {
  # Cria o nome do arquivo dinamicamente
  #file_name <- file.path(output_folder, paste0("random_dna_seq", i, ".fastq"))
  file_name <- file.path(output_folder, paste0("random_rna_seq", i, ".fastq"))
  
  # Chama a função passando o nome do arquivo
  generate_random_fastq(num_sequences = 10, seq_length = 20, file_name = file_name)
}

```

Teste da biblioteca

```{r}
#Localiza o caminho para os arquivos
caminho <- file.path(getwd(), "arquivos_gerados")

#Verificando se está tudo certo com os arquivos
list.files(path = caminho, pattern = ".fastq")

#Teste
rqc(path = caminho, pattern = ".fastq")
#erro pq encontrou "U" que não é DNAString
#Testes com DNA sequences:
  #Tentativa com 50 fastq's: Sessão abortada
  #Tentativa com 10 fastq's: Sessão abortada
  #Tentativa com 5 fastq's: Sessão abortada
  #Tentativa com 3 fastq's: Sessão abortada
  #Tentativa com 1 fastq: Sessão abortada

#Teste com mais parâmetros
rqc(
path = ".",
pattern = ".fq",
sample = TRUE,
n = 1e+06,
group = NULL,
top = 10,
pair = NULL,
outdir = tempdir(),
file = "rqc_report",
openBrowser = TRUE,
workers = multicoreWorkers()
)
#Tentativa com arquivos aleatórios criados = Sessão abortada
#Tentativa com fastq's que já tinha no computador da aula do Jean deu certo
#Copiei o arquivo da aula do Jean até ter 50 arquivos e funcionou, levou cerca de uns 4 minutos
#Arquivo copiado 100 vezes, levou cerca de 6 minutos
#Arquivo copiado 200 vezes -> Error in file(path, open, encoding = "ASCII") : 
  #todas as 128 conexões estão em uso

#rqcQA -> Testar
#rqcQA(x(imputFile), sample, n, group, top, pair, workers = multicoreWorkers()
```
